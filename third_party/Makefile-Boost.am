# Non-root Makefile.am for UniversalCodeGrep, ./third_party/Makefile-Boost.am directory.
#
# Copyright 2015 Gary R. Van Sickle (grvs@users.sourceforge.net).
#
# This file is part of UniversalCodeGrep.
#
# UniversalCodeGrep is free software: you can redistribute it and/or modify it under the
# terms of version 3 of the GNU General Public License as published by the Free
# Software Foundation.
#
# UniversalCodeGrep is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# UniversalCodeGrep.  If not, see <http://www.gnu.org/licenses/>.

###
### The Automake rules for building static versions of the Boost libraries we need from an upstream source tarball.
###

# The Boost build-from-tarball process is untarred->configured->built->installed.

# Some Boost lib directory variables.
BOOST_BUILD_DIR = $(abs_builddir)/boost_build_dir
BOOST_LOCAL = ./boost_local
BOOST_STAGE_DIR = $(abs_builddir)/$(BOOST_TARBALL_DIRNAME)/stage
BOOST_LOCAL_LIB = $(abs_builddir)/$(BOOST_TARBALL_DIRNAME)/stage/lib
BOOST_LOCAL_INCLUDE = $(BOOST_LOCAL)/include
TOOL_BOOST_B2_INSTALL_PREFIX = $(BOOST_LOCAL)/b2
TOOL_BOOST_B2 = $(TOOL_BOOST_B2_INSTALL_PREFIX)/bin/b2$(EXEEXT)

third_party_complete_deps += stamp_boost_src_installed
MOSTLYCLEANFILES += stamp_boost_src_built stamp_boost_src_installed
CLEANFILES += stamp_boost_src_configured stamp_boost_src_untarred

# Remove the untarred Boost source tree on "make clean". 
CLEAN_LOCAL_DIRS += $(builddir)/$(BOOST_TARBALL_DIRNAME)

# @todo Determine if this should be single or multi from configure.
BOOST_THREADING = multi
BOOST_BJAM_JOBS = -j$(CPU_COUNT)
BOOST_RUNTIME_LINK = static
BOOST_VARIANT = debug
BOOST_TOOLSET = $$(echo $(CXX) | sed s/g++/gcc/)


stamp_boost_src_untarred: $(FILE_PATH_BOOST_SOURCE_TARBALL)
	echo "`date -u`" > $@-temp
	@echo "In directory $$(pwd), attempting to untar \"$<\""
	@: 'Untar the Boost source distro into our build directory.'
	test -f "$<" && tar -xaf "$<"
	mv $@-temp $@

$(TOOL_BOOST_B2): stamp_boost_src_untarred
	@echo "Building and installing b2..." 
	cd $(BOOST_TARBALL_DIRNAME)/tools/build && \
	./bootstrap.sh --with-toolset=$(BOOST_TOOLSET) && \
	./b2 install toolset=$(BOOST_TOOLSET) --prefix=../../../$(TOOL_BOOST_B2_INSTALL_PREFIX)

stamp_boost_src_configured: stamp_boost_src_untarred $(TOOL_BOOST_B2)
	echo "`date -u`" > $@-temp
	@echo "Building b2 and configuring Boost..."; 
	sleep 1;
	mv $@-temp $@
	
stamp_boost_src_installed: stamp_boost_src_configured
	echo "`date -u`" > $@-temp
	@echo "Building Boost with b2...";
	cd $(BOOST_TARBALL_DIRNAME) && \
		../$(TOOL_BOOST_B2) -d 1 toolset=$(BOOST_TOOLSET) --build-dir=../boost_build_dir -q $(BOOST_BJAM_JOBS) --prefix=../boost_local \
		variant=$(BOOST_VARIANT) link=static runtime-link=$(BOOST_RUNTIME_LINK) threading=$(BOOST_THREADING) \
		--with$$(echo "$(REQUIRED_BOOST_LIBS)" | sed 's/,/ --with-/g')
	mv $@-temp $@

# @todo I'd still like to install this to a local directory (i.e. ./boost_local), but AFAICT it's nothing more
# than a copy, and bjam takes way too long to do it.  For now we'll use the headers and libs in situ. 	
#stamp_boost_src_installed: stamp_boost_src_built
#	rm -f $@-temp
#	cd $(BOOST_TARBALL_DIRNAME) && ./b2 --build-dir=../boost_build_dir -q $(BOOST_BJAM_JOBS) --prefix=../boost_local \
#		link=static threading=$(BOOST_THREADING) install
#	echo "`date -u`" > $@-temp && mv $@-temp $@

