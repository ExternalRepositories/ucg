# type_inclusion.at for UniversalCodeGrep
#
# Copyright 2015 Gary R. Van Sickle (grvs@users.sourceforge.net).
#
# This file is part of UniversalCodeGrep.
#
# UniversalCodeGrep is free software: you can redistribute it and/or modify it under the
# terms of version 3 of the GNU General Public License as published by the Free
# Software Foundation.
#
# UniversalCodeGrep is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# UniversalCodeGrep.  If not, see <http://www.gnu.org/licenses/>.

AT_BANNER([UniversalCodeGrep type inclusion checks])

###
### --noenv and --type=
###
AT_SETUP(['--noenv' and '--type='])

# The project .ucgrc file.
AT_DATA([.ucgrc],[# Generated test project rc file.
--type=cpp
])

# The "cpp" data file.
AT_DATA([test_file.cpp], [Generated test file
ptr
inside-ptr-sentence
])

# The "HTML" data file.
AT_DATA([test_file.html],[Generated test file
something
ptr
ptr
ptr
another something
])

# --noenv should give us 2+3=5 hits.
AT_CHECK([ucg '--noenv' 'ptr' | wc -l],[0],[5
],[stderr])

# No '--noenv' should give us 2 hits from the cpp file.
AT_CHECK([ucg --test-noenv-user 'ptr' | wc -l],[0],[2
],[stderr])

# Adding --type=html should again give us 2+3=5 hits.
AT_CHECK([ucg --test-noenv-user '--type=html' 'ptr' | wc -l],[0],[5
],[stderr])

# And adding --type=nocpp to that should give us the 3 hits in the html file.
AT_CHECK([ucg --test-noenv-user '--type=html' '--type=nocpp' ptr | wc -l],[0],[3
],[stderr])

AT_CLEANUP


###
### Overlapping file type specs.
###
AT_SETUP([Overlapping file type specs])

AT_DATA([test_file.cpp],[#include
])

AT_DATA([test_file.c],[#include
])

AT_DATA([test_file.h],[#include
])

# --type=cpp should give us 2 hits.
AT_CHECK([ucg --noenv --type=cpp 'include' | wc -l],[0],[2
],[stderr])

# --type=nohh should give us 2 hits.
AT_CHECK([ucg --noenv --type=nohh 'include' | wc -l],[0],[2
],[stderr])

# --type=cpp --type=nocc should give us 1 hit, in the .cpp file.
AT_CHECK([ucg --noenv --type=cpp --type=nocc 'include' | wc -l],[0],[1
],[stderr])

# --type=nocpp --type=cc should give us 2 hits, in the .c and .h files.
AT_CHECK([ucg --noenv --type=nocpp --type=cc 'include' | wc -l],[0],[2
],[stderr])

# --type=nocpp --type=nocc should give us 0 hits.
AT_CHECK([ucg --noenv --type=nocpp --type=nocc 'include' | wc -l],[0],[0
],[stderr])

# --type=nocpp --type=nocc --type=hh should give us 1 hit, the same as if we only specified --type=hh.
AT_CHECK([ucg --noenv --type=nocpp --type=nocc --type=hh 'include' | wc -l],[0],[1
],[stderr])

# No --type= param should give us 3 hits.
AT_CHECK([ucg --noenv 'include' | wc -l],[0],[3
],[stderr])

AT_CLEANUP


###
### User-defined file type specs.
###
AT_SETUP([User-defined file type specs])

AT_DATA([test_file.xqz],[#include
])

AT_DATA([UserDefinedName],[#include
])

AT_DATA([test_file.7],[#include
])

AT_DATA([test_file.h],[#include
])

# No params should give us 1 hit in the .h file.
AT_CHECK([ucg --noenv 'include' | wc -l],[0],[1
],[stderr])

# Defining two new types, and not specifying a --type=TYPE, should give us 4 hits.
AT_CHECK([ucg --noenv --type-set=type1:ext:xqz,7 --type-set=type2:is:UserDefinedName 'include' | wc -l],[0],[4
],[stderr])

# The short form "--TYPE" should work on the user defined types.
AT_CHECK([ucg --noenv --type-set=type1:ext:xqz,7 --type-set=type2:is:UserDefinedName --type1 'include' | wc -l],[0],[2
],[stderr])

# The short form "--noTYPE" should work on the user defined types.  This should give us 2 hits, in the .h file and the UserDefinedName file.
AT_CHECK([ucg --noenv --type-set=type1:ext:xqz,7 --type-set=type2:is:UserDefinedName --notype1 'include' | wc -l],[0],[2
],[stderr])

# "--type-add" should work on the user defined types.
AT_CHECK([ucg --noenv --type-set=type1:ext:xqz,7 --type-add=type1:is:UserDefinedName --type1 'include' | wc -l],[0],[3
],[stderr])

AT_CLEANUP
