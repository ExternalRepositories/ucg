# file_presentation.at for UniversalCodeGrep
#
# Copyright 2016 Gary R. Van Sickle (grvs@users.sourceforge.net).
#
# This file is part of UniversalCodeGrep.
#
# UniversalCodeGrep is free software: you can redistribute it and/or modify it under the
# terms of version 3 of the GNU General Public License as published by the Free
# Software Foundation.
#
# UniversalCodeGrep is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# UniversalCodeGrep.  If not, see <http://www.gnu.org/licenses/>.

AT_BANNER([UniversalCodeGrep file presentation checks])


#
# --[no]column tests
#
AT_SETUP([--[[no]]column tests])

AT_DATA([test_file.cpp],
[if(0)
{
	//< tab
	do_something();
    //< spaces
    do_something_else();
}
])

# Check for column output to a non-tty.
AT_CHECK([ucg --noenv --cpp --column 'do_something'],[0],
[test_file.cpp:4:2:	do_something();
test_file.cpp:6:5:    do_something_else();
])

# Check that --nocolumn works for output to a non-tty.
AT_CHECK([ucg --noenv --cpp --nocolumn 'do_something'],[0],
[test_file.cpp:4:	do_something();
test_file.cpp:6:    do_something_else();
])

# Check that no column is the default for output to a non-tty.
AT_CHECK([ucg --noenv --cpp 'do_something'],[0],
[test_file.cpp:4:	do_something();
test_file.cpp:6:    do_something_else();
])

# Check for column output to a TTY.
AT_DATA([test_file.cpp.expected],[test_file.cpp
4:2:	do_something();
6:5:    do_something_else();
])
AT_CHECK([cat test_file.cpp.expected | $PROG_TOHEX > test_file.cpp.expected.hex], [0])

AT_CHECK([ASX_SCRIPT ucg --noenv --cpp --nocolour --column 'do_something'], [0], [stdout], [stderr])
AT_CHECK([cat stdout | $PROG_TOHEX > stdout_tty.txt.hex], [0])
AT_CAPTURE_FILE([test_file.cpp.expected.hex])
AT_CAPTURE_FILE([stdout_tty.txt.hex])
AT_CHECK([diff test_file.cpp.expected.hex stdout_tty.txt.hex], [0], [stdout], [stderr])


# Check for nocolumn output to a TTY.
AT_CHECK([ASX_SCRIPT ucg --noenv --cpp --nocolor --nocolumn 'do_something'],[0],
[test_file.cpp
4:	do_something();
6:    do_something_else();
])

# Check for default (nocolumn) output to a TTY.
AT_CHECK([ASX_SCRIPT ucg --noenv --cpp --nocolor 'do_something'], [0],
[test_file.cpp
4:	do_something();
6:    do_something_else();
])

AT_CLEANUP


#
# Color-vs-file output tests
#
AT_SETUP([Color-vs-file tests])

AT_DATA([test_file.cpp],
[abcd
efgh
abcd
])

AT_DATA([expout],
[@<:@32;1m@<:@Ktest_file.cpp@<:@0m@<:@K:@<:@33;1m@<:@K1@<:@0m@<:@K:a@<:@30;43;1m@<:@Kbc@<:@0m@<:@Kd
@<:@32;1m@<:@Ktest_file.cpp@<:@0m@<:@K:@<:@33;1m@<:@K3@<:@0m@<:@K:a@<:@30;43;1m@<:@Kbc@<:@0m@<:@Kd
])

# Check for color output to a file.
AT_CHECK([ucg --noenv --cpp --color 'bc' > testout1.txt && cat testout1.txt],[0],[expout])

# Check for nocolor to a file.
AT_CHECK([ucg --noenv --cpp --nocolor 'bc' > testout1.txt && cat testout1.txt],[0],
[test_file.cpp:1:abcd
test_file.cpp:3:abcd
])

# Check for default (should be no color).
AT_CHECK([ucg --noenv --cpp 'bc' > testout1.txt && cat testout1.txt],[0],
[test_file.cpp:1:abcd
test_file.cpp:3:abcd
])

AT_CLEANUP

###
### Color-vs-terminal tests
###

# Helper macro for generating the files.
m4_define([UCG_CREATE_TEST_FILES], [
AT_DATA([test_file.cpp],[abcd
efgh
abcd
])
AT_DATA([expout],[@<:@32;1m@<:@Ktest_file.cpp@<:@0m@<:@K
@<:@33;1m@<:@K1@<:@0m@<:@K:a@<:@30;43;1m@<:@Kbc@<:@0m@<:@Kd
@<:@33;1m@<:@K3@<:@0m@<:@K:a@<:@30;43;1m@<:@Kbc@<:@0m@<:@Kd
])
AT_CHECK([cat expout | $PROG_TOHEX > expout.hex], [0])
AT_CAPTURE_FILE([expout.hex])
])

# Check for color output to a TTY.
AT_SETUP([Color-vs-terminal: with --color])
# Create the test and expected files.
UCG_CREATE_TEST_FILES
AT_CHECK([ASX_SCRIPT ucg --noenv --cpp --color 'bc' | $PROG_TOHEX > stdout.hex], [0], [stdout], [stderr])
AT_CAPTURE_FILE([stdout.hex])
AT_CHECK([diff expout.hex stdout.hex], [0], [stdout], [stderr])
AT_CLEANUP

# Check for nocolor to a TTY.
AT_SETUP([Color-vs-terminal: with --nocolor])
# Create the test and expected files.
UCG_CREATE_TEST_FILES
AT_CHECK([ASX_SCRIPT ucg --noenv --cpp --nocolor 'bc'], [0], [test_file.cpp
1:abcd
3:abcd
])
AT_CLEANUP

# Check for default (should be color).
AT_SETUP([Color-vs-terminal: default])
# Create the test and expected files.
UCG_CREATE_TEST_FILES
AT_CHECK([ASX_SCRIPT ucg --noenv --cpp 'bc'], [0], [expout])
AT_CLEANUP


#
# Context tests.
#

m4_define([UCG_CONTEXT_TEST_FILES],
[AT_DATA([context.txt],
[Context Test File
abc def
ghi def
jkl mno Ctx
pqr stu
vwx yz1
234 mno Ctx
567 890
abc cba
abc stu
])
])

AT_SETUP([Context: -C1, abutting])
UCG_CONTEXT_TEST_FILES
#AT_CHECK([$EGREP -Hnr -C1 'mno' context.txt > expout], [0], [stdout], [stderr])
#AT_CHECK([ucg --noenv -C1 'mno' context.txt], [0], [expout], [stderr])
AT_CLEANUP
