# sanity.at for UniversalCodeGrep
#
# Copyright 2015-2016 Gary R. Van Sickle (grvs@users.sourceforge.net).
#
# This file is part of UniversalCodeGrep.
#
# UniversalCodeGrep is free software: you can redistribute it and/or modify it under the
# terms of version 3 of the GNU General Public License as published by the Free
# Software Foundation.
#
# UniversalCodeGrep is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# UniversalCodeGrep.  If not, see <http://www.gnu.org/licenses/>.


###
### Check that we can match a simple literal in a file in a subdirectory.
###
AT_SETUP([Match 'Hello World!' in text file in subdir])
AT_CHECK([mkdir newdir && printf 'Hello World!\n' > newdir/test.txt], [0], [ignore], [ignore])
AT_CAPTURE_FILE([newdir/test.txt])
AT_CHECK([ucg --noenv 'Hello World' newdir], [0], [newdir/test.txt:1:Hello World!
], [stderr])
AT_CLEANUP

###
### Check if we properly detect a bad starting search path and return an error.
###
AT_SETUP([Error code with bad search path])

# Note that the stdout match text here has a literal '\n' in it due to the line break; don't try
# to put this on one line.
AT_CHECK([ucg 'a' ./thisDirDoesntExist], [1], [stdout], [stderr])
AT_CHECK([cat stderr | $EGREP 'ucg:.*thisDirDoesntExist.*[[Nn]]o such file or directory'], [0], [stdout], [stderr])

AT_CLEANUP


###
### Check for proper handling of a bad regex.
###
AT_SETUP([Error code with bad regex])

AT_CHECK([ucg '*'], [255], [stdout], [stderr])

AT_CLEANUP

###
### Check that we return 0 on matches, 1 on no matches.
###
AT_SETUP([Return code with matches == 0])

AT_DATA([file1.cpp],[abcd
efgh
ijkl
mnop
])

AT_CHECK([ucg --noenv 'ijkl'], [0], [stdout], [stderr])

AT_CLEANUP

AT_SETUP([Return code with no matches == 1])

AT_DATA([file1.cpp],[abcd
efgh
ijkl
mnop
])

AT_CHECK([ucg --noenv 'jklm'], [1], [stdout], [stderr])

AT_CLEANUP



###
### Hidden file checks
###
AT_SETUP([Hidden file handling, search])

AT_DATA([.hidden_no_extension],[hidden-no-extension
])

AT_DATA([.hidden_with_extension.sh],[hidden-with-extension
])

# With no specified files/dirs, should only pick up the hidden *.sh file.
AT_CHECK([ucg --noenv 'hidden'],[0],[.hidden_with_extension.sh:1:hidden-with-extension
],[stderr])

AT_CLEANUP

# Specifying both hidden files should get us two matches.
AT_SETUP([Hidden file handling, specified])

AT_DATA([.hidden_no_extension],[hidden-no-extension
])

AT_DATA([.hidden_with_extension.sh],[hidden-with-extension
])

AT_CHECK([ucg --noenv 'hidden' .hidden* | LCT],[0],[2],[stderr])

AT_CLEANUP

